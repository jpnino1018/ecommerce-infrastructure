trigger:
  branches:
    include:
      - main
      - stage
      - develop

pool:
  name: my-machine

variables:
  terraformVersion: '1.6.6'  # update to your preferred version

stages:

# === DEV STAGE ===
- stage: Terraform_Dev
  displayName: "Terraform Deploy - Dev"
  condition: eq(variables['Build.SourceBranchName'], 'develop')
  jobs:
    - job: Deploy_Dev
      displayName: "Deploy Dev Environment"
      steps:
        - checkout: self
          clean: true

        - task: AzureCLI@2
          displayName: "üîê Login to Azure"
          inputs:
            azureSubscription: 'azure-connection'
            scriptType: 'ps'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az account show

        - powershell: |
            cd $(System.DefaultWorkingDirectory)/envs/dev

            # Init (local state)
            terraform init

            # Validate
            terraform validate

            # Plan
            terraform plan -var-file="dev.tfvars" -out=tfplan

            # Apply
            terraform apply -auto-approve tfplan
          displayName: "üöÄ Terraform Deploy - Dev"
          workingDirectory: '$(System.DefaultWorkingDirectory)/envs/dev'


# === STAGE STAGE ===
- stage: Terraform_Stage
  displayName: "Terraform Deploy - Stage"
  condition: eq(variables['Build.SourceBranchName'], 'stage')
  jobs:
    - job: Deploy_Stage
      displayName: "Deploy Stage Environment"
      steps:
        - checkout: self
          clean: true

        - task: AzureCLI@2
          displayName: "üîê Login to Azure"
          inputs:
            azureSubscription: 'azure-connection'
            scriptType: 'ps'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az account show

        - powershell: |
            cd $(System.DefaultWorkingDirectory)/envs/stage

            terraform init
            terraform validate
            terraform plan -var-file="stage.tfvars" -out=tfplan
            terraform apply -auto-approve tfplan
          displayName: "üöÄ Terraform Deploy - Stage"
          workingDirectory: '$(System.DefaultWorkingDirectory)/envs/stage'


# === PROD STAGE ===
- stage: Terraform_Prod
  displayName: "Terraform Deploy - Prod"
  condition: eq(variables['Build.SourceBranchName'], 'main')
  jobs:
    - job: Deploy_Prod
      displayName: "Deploy Prod Environment"
      steps:
        - checkout: self
          clean: true

        - task: AzureCLI@2
          displayName: "üîê Login to Azure and set environment"
          inputs:
            azureSubscription: 'azure-connection'
            scriptType: 'ps'
            scriptLocation: 'inlineScript'
            inlineScript: |
              $env:ARM_CLIENT_ID = $env:servicePrincipalId
              $env:ARM_CLIENT_SECRET = $env:servicePrincipalKey
              $env:ARM_SUBSCRIPTION_ID = $env:subscriptionId
              $env:ARM_TENANT_ID = $env:tenantId
              az account show


        - powershell: |
            cd $(System.DefaultWorkingDirectory)/envs/prod

            terraform init
            terraform validate
            terraform plan -var-file="prod.tfvars" -out=tfplan
            terraform apply -auto-approve tfplan
          displayName: "üöÄ Terraform Deploy - Prod"
          workingDirectory: '$(System.DefaultWorkingDirectory)/envs/prod'
